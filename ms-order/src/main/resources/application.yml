app:
  microservice:
    name: food.restaurant.${spring.application.name}
server:
  error:
    include-binding-errors: always
    include-exception: true
    include-message: always
    include-stacktrace: always
  port: ${PORT:10000}
spring:
  application:
    name: order
  config:
    import: configserver:http://127.0.0.1:8888
  cloud:
    loadbalancer:
      retry:
        max-retries-on-same-service-instance: 0
        max-retries-on-next-service-instance: 3
        retry-on-all-operations: true
        enabled: true
resilience4j:
  retry:
    instances:
      accountingRetry:
        wait-duration: '1s'
        max-attempts: 3
        ignore-exceptions:
          - java.lang.IllegalCallerException
        retry-exception-predicate: org.training.microservice.resilience.RetryExpHandler
        result-predicate: org.training.microservice.resilience.ResultRetryHandler
    retry-aspect-order: 1
  circuitbreaker:
    instances:
      accountingCB:
        sliding-window-type: count_based
        sliding-window-size: 20
        minimum-number-of-calls: 10
        failure-rate-threshold: 30
        wait-duration-in-open-state: '5s'
        max-wait-duration-in-half-open-state: '15s'
        permitted-number-of-calls-in-half-open-state: 10
        slow-call-duration-threshold: '100ms'
        slow-call-rate-threshold: 50
        register-health-indicator: true
    circuit-breaker-aspect-order: 2



